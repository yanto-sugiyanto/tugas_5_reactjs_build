{"version":3,"sources":["Lib/DaftarMakanan.js","Form/FormMakanan.js","Page/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["DaftarMakanan","NamaMakanan","Harga","img","FormMakanan","props","state","pesanan","jumlah","handleChange","bind","handleSubmit","handleChangeJumlah","React","createRef","e","this","setState","target","value","preventDefault","alert","current","focus","onSubmit","onChange","type","ref","placeholder","Component","listmakanan","MenuMakanan","map","data","index","key","src","alt","width","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oPAmCeA,EAhCO,CACtB,CACCC,YAAY,cACZC,MAAM,SACNC,IAAI,4EAGL,CACCF,YAAY,OACZC,MAAM,SACNC,IAAI,sEAGL,CACCF,YAAY,OACZC,MAAM,SACNC,IAAI,8EAGL,CACCF,YAAY,OACZC,MAAM,SACNC,IAAI,2GAGL,CACCF,YAAY,cACZC,MAAM,SACNC,IAAI,6F,OCeWC,E,kDA3Cf,WAAaC,GAAO,IAAD,8BAClB,cAAOA,IACFC,MAAO,CAACC,QAAQ,GAAIC,OAAO,IAEhC,EAAKC,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBAClB,EAAKE,mBAAmB,EAAKA,mBAAmBF,KAAxB,gBACxB,EAAKH,QAAQM,IAAMC,YAPD,E,yDASNC,GACZC,KAAKC,SAAS,CAACV,QAAQQ,EAAEG,OAAOC,U,yCAEdJ,GAClBC,KAAKC,SAAS,CAACT,OAAOO,EAAEG,OAAOC,U,mCAGnBJ,GACZA,EAAEK,iBACFC,MACC,yBACDL,KAAKV,MAAMC,QAAU,sBAAwBS,KAAKV,MAAME,QAExDQ,KAAKC,SAAS,CAAEV,QAAQ,GAAGC,OAAO,KAClCQ,KAAKT,QAAQe,QAAQC,U,+BAIrB,OACC,6BACA,gCACA,0BAAMC,SAAUR,KAAKL,cAErB,2BAAOc,SAAUT,KAAKP,aAAciB,KAAK,OAAOP,MAAOH,KAAKV,MAAMC,QAASoB,IAAKX,KAAKT,QAASqB,YAAY,yBAC1G,2BAAOF,KAAK,SAASP,MAAOH,KAAKV,MAAME,OAAQiB,SAAUT,KAAKJ,mBAAoBgB,YAAY,yBAC9F,6BAAK,6BACL,2BAAOF,KAAK,SAASP,MAAM,iB,GApCJU,aCEpBC,EAAc,CACpB,CACC7B,YAAY,cACZC,MAAM,UAEP,CACCD,YAAY,OACZC,MAAM,UAEP,CACCD,YAAY,OACZC,MAAM,UAEP,CACCD,YAAY,OACZC,MAAM,UAEP,CAECD,YAAY,cACZC,MAAM,UAEP,CAECD,YAAY,cACZC,MAAM,UAEP,CAECD,YAAY,aACZC,MAAM,UAEP,CAECD,YAAY,QACZC,MAAM,UAEP,CAECD,YAAY,WACZC,MAAM,WAgDS6B,E,uKAzCd,OACC,6BACA,wDACA,+BACA,+BACA,4BACC/B,EAAcgC,KAAI,SAACC,EAAKC,GACxB,OACA,wBAAIC,IAAKD,GACT,yBAAKE,IAAKH,EAAK9B,IACfkC,IAAI,iBACJC,MAAM,MACNC,OAAO,QAEP,gCACA,2BAAIN,EAAK1B,SACT,yCAAe0B,EAAK/B,eAQrB,6CACC4B,EAAYE,KAAI,SAACC,EAAKC,GACtB,OACA,yBAAKC,IAAKD,GACV,2BACCD,EAAKhC,YADN,eAC+BgC,EAAK/B,WAOrC,kBAAC,EAAD,W,GAvCuB2B,aCnCXW,MATf,WACE,OACE,6BACA,kBAAC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e964e46b.chunk.js","sourcesContent":["\r\n\r\n\r\nconst DaftarMakanan = [\r\n{\r\n\tNamaMakanan:\"Nasi Padang\",\r\n\tHarga:\"20.000\",\r\n\timg:\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"\r\n},\r\n\r\n{\r\n\tNamaMakanan:\"Sate\",\r\n\tHarga:\"20.000\",\r\n\timg:\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"\r\n},\r\n\r\n{\r\n\tNamaMakanan:\"Soto\",\r\n\tHarga:\"10.000\",\r\n\timg:\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"\r\n},\r\n\r\n{\r\n\tNamaMakanan:\"Uduk\",\r\n\tHarga:\"10.000\",\r\n\timg:\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"\r\n},\r\n\r\n{\r\n\tNamaMakanan:\"Nasi Kuning\",\r\n\tHarga:\"15.000\",\r\n\timg:\"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\"\r\n},\r\n];\r\n\r\nexport default DaftarMakanan;","import React, {Component} from 'react'\r\n\r\nclass FormMakanan extends Component {\r\n\tconstructor (props){\r\n\t\tsuper (props);\r\n\t\tthis.state= {pesanan:\"\", jumlah:\"\"};\r\n\r\n\t\tthis.handleChange=this.handleChange.bind(this);\r\n\t\tthis.handleSubmit=this.handleSubmit.bind(this);\r\n\t\tthis.handleChangeJumlah=this.handleChangeJumlah.bind(this);\r\n\t\tthis.pesanan=React.createRef();\r\n\t}\r\n\thandleChange(e){\r\n\t\tthis.setState({pesanan:e.target.value});\r\n\t}\r\n\thandleChangeJumlah(e){\r\n\t\tthis.setState({jumlah:e.target.value});\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault()\r\n\t\talert(\r\n\t\t\t\"Pesanan Anda Adalah : \" +\r\n\t\tthis.state.pesanan + \"| Jumlah Pesanan : \" + this.state.jumlah);\r\n\r\n\t\tthis.setState({ pesanan:\"\",jumlah:\"\"})\r\n\t\tthis.pesanan.current.focus();\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<center>\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\r\n\t\t\t<input onChange={this.handleChange} type=\"text\" value={this.state.pesanan} ref={this.pesanan} placeholder=\"Masukan Pesanan Anda\" />\r\n\t\t\t<input type=\"number\" value={this.state.jumlah} onChange={this.handleChangeJumlah} placeholder=\"Masukan Pesanan Anda\" />\r\n\t\t\t<br/><br/>\r\n\t\t\t<input type=\"submit\" value=\"pesan\"/>\r\n\t\t\t</form>\r\n\t\t\t</center>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\texport default FormMakanan;\r\n\r\n\r\n\r\n\r\n","import React,{Component} from 'react';\r\nimport DaftarMakanan from '../Lib/DaftarMakanan';\r\nimport FormMakanan from '../Form/FormMakanan';\r\n\r\nconst listmakanan = [\r\n{\r\n\tNamaMakanan:\"Nasi Padang\",\r\n\tHarga:\"20.000\"\r\n},\r\n{\r\n\tNamaMakanan:\"Sate\",\r\n\tHarga:\"20.000\"\r\n},\r\n{\r\n\tNamaMakanan:\"Soto\",\r\n\tHarga:\"10.000\"\r\n},\r\n{\r\n\tNamaMakanan:\"Uduk\",\r\n\tHarga:\"10.000\"\r\n},\r\n{\r\n\r\n\tNamaMakanan:\"Nasi Kuning\",\r\n\tHarga:\"15.000\"\r\n},\r\n{\r\n\r\n\tNamaMakanan:\"Ayam Geprek\",\r\n\tHarga:\"15.000\"\r\n},\r\n{\r\n\r\n\tNamaMakanan:\"Pecel Lele\",\r\n\tHarga:\"15.000\"\r\n},\r\n{\r\n\r\n\tNamaMakanan:\"Pecel\",\r\n\tHarga:\"10.000\"\r\n},\r\n{\r\n\r\n\tNamaMakanan:\"Mie Ayam\",\r\n\tHarga:\"10.000\"\r\n}\r\n];\r\n\r\nclass MenuMakanan extends Component {\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<h3>Daftar Makanan Favourite</h3>\r\n\t\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t{DaftarMakanan.map((data,index)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t<td key={index}>\r\n\t\t\t\t<img src={data.img}\r\n\t\t\t\talt=\"Produk Makanan\"\r\n\t\t\t\twidth=\"150\"\r\n\t\t\t\theight=\"100\"\r\n\t\t\t\t/>\r\n\t\t\t\t<center>\r\n\t\t\t\t<p>{data.pesanan}</p>\r\n\t\t\t\t<p>Harga: Rp. {data.Harga}</p>\r\n\t\t\t\t</center>\r\n\t\t\t\t</td>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<h4>List Makanan </h4>\r\n\t\t\t{listmakanan.map((data,index)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t<div key={index}>\r\n\t\t\t\t<p>\r\n\t\t\t\t{data.NamaMakanan} | Harga Rp.{data.Harga}\r\n\t\t\t\t</p>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<FormMakanan />\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\texport default MenuMakanan;","import React from 'react';\nimport './App.css';\nimport MenuMakanan from './Page/MenuMakanan'\n\nfunction App() {\n  return (\n    <div>\n    <MenuMakanan />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}